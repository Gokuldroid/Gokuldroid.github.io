{"version":3,"sources":["webpack:///./src/components/app-list/index.jsx","webpack:///./src/components/module/apps/index.jsx","webpack:///./src/pages/apps.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/shared/header/index.jsx","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["apps","name","img","desc","playStore","more","App","props","react_default","a","createElement","className","class","src","info","alt","na","href","index","render","map","app","Component","Apps","Fragment","header","app_list_index","AppsPage","apps_Apps","seo","title","keywords","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","Pages","to","Header","siteTitle","defaultProps","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"uJAGMA,iBAAO,CACX,CACEC,KAAM,sBACNC,IAAK,qCACLC,KAAM,0GACNC,UAAW,mEACXC,KAAM,IAER,CACEJ,KAAM,0BACNC,IAAK,0BACLC,KAAM,wGACNC,UAAW,gEACXC,KAAM,IAER,CACEJ,KAAM,gBACNC,IAAK,wBACLC,KAAM,0FACNC,UAAW,uEACXC,KAAM,MAIV,SAASC,EAAIC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,eAAeC,IAAKN,EAAMO,KAAKZ,IAAKa,IAAKR,EAAMO,KAAKE,MAEjER,EAAAC,EAAAC,cAAA,OAAKE,MAAM,eACRL,EAAMO,KAAKb,MAEdO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,EAAMO,KAAKX,OAEvCK,EAAAC,EAAAC,cAAA,OAAKE,MAAM,8BACTJ,EAAAC,EAAAC,cAAA,KAAGO,KAAMV,EAAMO,KAAKV,UAAWQ,MAAM,aAArC,2BAQaM,4FACnBC,OAAA,WACE,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZX,EAAKoB,IAAI,SAACC,GAAD,OAAUb,EAAAC,EAAAC,cAACJ,EAAD,CAAKQ,KAAMO,YALNC,aC5CdC,4FACnBJ,OAAA,WACE,OACEX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,CAASf,UAAU,wBALOW,sBCSnBK,UANE,kBACfnB,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,8ECThCC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAjC,IAAAuB,EAAA,SAYMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAA5B,GAAK,OACvB8B,EAAA5B,EAAAC,cAACiC,EAAmBG,SAApB,KACG,SAAAC,GACC,OACExC,EAAMyC,MACLD,EAAgBxC,EAAM0C,QAAUF,EAAgBxC,EAAM0C,OAAOD,MAEtDzC,EAAMY,QAAUZ,EAAM2C,UAC5B3C,EAAMyC,KAAOzC,EAAMyC,KAAKA,KAAOD,EAAgBxC,EAAM0C,OAAOD,MAGvDX,EAAA5B,EAAAC,cAAA,uCA4BfyB,EAAYgB,UAAY,CACtBH,KAAMI,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBpC,OAAQiC,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxB,IAAMlC,cAAc2D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,8CCrBf,IAAAY,EAAA1C,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAoC,EAAA3C,EAAA,GAAA4C,EAAA5C,EAAAM,EAAAqC,GAKME,GALN7C,EAAA,KAKc,kBACZ4C,EAAAnE,EAAAC,cAAA,OAAKC,UAAU,gDACbiE,EAAAnE,EAAAC,cAAA,MAAIC,UAAU,cACZiE,EAAAnE,EAAAC,cAAA,MAAIC,UAAU,YAAWiE,EAAAnE,EAAAC,cAACgE,EAAA,EAAD,CAAM/D,UAAU,WAAWmE,GAAG,SAA9B,SACzBF,EAAAnE,EAAAC,cAAA,MAAIC,UAAU,YAAWiE,EAAAnE,EAAAC,cAACgE,EAAA,EAAD,CAAM/D,UAAU,WAAWmE,GAAG,aAA9B,aACzBF,EAAAnE,EAAAC,cAAA,MAAIC,UAAU,YAAWiE,EAAAnE,EAAAC,cAACgE,EAAA,EAAD,CAAM/D,UAAU,WAAWmE,GAAG,SAA9B,aAMzBC,EAAS,SAAAhB,KAAGiB,UAAH,OACbJ,EAAAnE,EAAAC,cAAA,OAAKC,UAAU,sDACbiE,EAAAnE,EAAAC,cAACgE,EAAA,EAAD,CAAM/D,UAAU,eAAemE,GAAG,KAAlC,UAA6CF,EAAAnE,EAAAC,cAAA,wBAC7CkE,EAAAnE,EAAAC,cAACmE,EAAD,QAIJE,EAAO5B,UAAY,CACjB6B,UAAW5B,IAAUE,QAGvByB,EAAOE,aAAe,CACpBD,UAAS,IAGID,gHC1Bf,SAASG,EAATnB,GAA2D,IAA5CoB,EAA4CpB,EAA5CoB,YAAaC,EAA+BrB,EAA/BqB,KAAMC,EAAyBtB,EAAzBsB,KAAMtD,EAAmBgC,EAAnBhC,SAAUD,EAASiC,EAATjC,MAChD,OACEwD,EAAA7E,EAAAC,cAAC6E,EAAA,EAAD,CACEtC,MAAOuC,EACPrE,OAAQ,SAAA6B,GACN,IAAMyC,EACJN,GAAenC,EAAK0C,KAAKC,aAAaR,YACxC,OACEG,EAAA7E,EAAAC,cAACkF,EAAAnF,EAAD,CACEoF,eAAgB,CACdT,QAEFtD,MAAOA,EACPgE,cAAa,QAAU9C,EAAK0C,KAAKC,aAAa7D,MAC9CuD,KAAM,CACJ,CACEpF,KAAI,cACJ8F,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASjE,GAEX,CACEkE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACE9F,KAAI,eACJ8F,QAAO,WAET,CACE9F,KAAI,kBACJ8F,QAAS/C,EAAK0C,KAAKC,aAAaM,QAElC,CACEhG,KAAI,gBACJ8F,QAASjE,GAEX,CACE7B,KAAI,sBACJ8F,QAASN,IAGVS,OACCnE,EAASoE,OAAS,EACd,CACElG,KAAI,WACJ8F,QAAShE,EAASqE,KAAT,OAEX,IAELF,OAAOb,MAtDlBrC,KAAAqD,IA8DJnB,EAAID,aAAe,CACjBG,KAAI,KACJC,KAAM,GACNtD,SAAU,IAGZmD,EAAI/B,UAAY,CACdgC,YAAa/B,IAAUE,OACvB8B,KAAMhC,IAAUE,OAChB+B,KAAMjC,IAAUkD,MAChBvE,SAAUqB,IAAUmD,QAAQnD,IAAUE,QACtCxB,MAAOsB,IAAUE,OAAOC,YAGX2B,MAEf,IAAMM,EAAY,oKCrFlB,IAAAgB,EAASxE,EAAQ,IAAcyE,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkB1E,EAAQ,KAAgBwE,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-pages-apps-jsx-79f1bef0054a9082501c.js","sourcesContent":["import React, { Component } from 'react'\nimport './styles.scss';\n\nconst apps = [\n  {\n    name: 'VLC Stream & remote',\n    img: '/assets/apps/vlc_stream_remote.png',\n    desc: 'A Remote controller app for android that helps you to control VLC media player using your android phone',\n    playStore: 'https://play.google.com/store/apps/details?id=tuple.me.vlcremote',\n    more: ''\n  },\n  {\n    name: 'Doodly : system cleaner',\n    img: '/assets/apps/doodly.png',\n    desc: 'An utility app for android. (cache cleaner, app manager, duplicate files remover, QR scanner, etc...)',\n    playStore: 'https://play.google.com/store/apps/details?id=tuple.me.dtools',\n    more: ''\n  },\n  {\n    name: 'SASS tutorial',\n    img: '/assets/apps/sass.png',\n    desc: 'A tutorial app for SASS.Provides detailed lessons on the most popular css preprocessor.',\n    playStore: 'https://play.google.com/store/apps/details?id=me.tuple.sassreference',\n    more: ''\n  }\n];\n\nfunction App(props) {\n  return (\n    <div className=\"card app border border-success col\">\n      <div className=\"card-img-container\">\n        <img class=\"card-img-top\" src={props.info.img} alt={props.info.na}></img>\n      </div>\n      <div class=\"card-header\">\n        {props.info.name}\n      </div>\n      <div className=\"card-body\">\n        <p className=\"card-text\">{props.info.desc}</p>\n      </div>\n      <div class=\"card-body card-body--links\">\n        <a href={props.info.playStore} class=\"card-link\">Open in Playstore</a>\n        {/* <a href={props.info.more} class=\"card-link\">More details</a> */}\n      </div>\n    </div>\n  )\n}\n\n\nexport default class index extends Component {\n  render() {\n    return (\n      <div className=\"app-list container\">\n        <div className=\"row\">\n          {apps.map((app) => (<App info={app} />))}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Header from \"@components/shared/header\"\nimport AppList from \"@components/app-list\";\n\nexport default class Apps extends Component {\n  render() {\n    return (\n      <>\n        <Header/>\n        <AppList className=\"body-container\"/>\n      </>\n    )\n  }\n}\n","import React from \"react\"\nimport \"../styles/app.scss\"\n\nimport  Apps from \"@components/module/apps\"\n\nimport SEO from \"@components/seo\"\n\nconst AppsPage = () => (\n  <Apps>\n    <SEO title=\"Home\" keywords={[`android`, `gokul prabhu`, `VLC remote`]} />\n  </Apps>\n)\n\nexport default AppsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport './styles.scss'\n\nconst Pages = () => (\n  <div className=\"collapse navbar-collapse justify-content-end\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/blog\">Blog</Link></li>\n      <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/projects\">Projects</Link></li>\n      <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/apps\">Apps</Link></li>\n    </ul>\n  </div>\n);\n\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar navbar-expand-lg navbar-container fixed-top\">\n    <Link className=\"navbar-brand\" to=\"/\"> Gokul <span>| Droid</span></Link>\n    <Pages />\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}