{"componentChunkName":"component---src-components-module-blog-post-index-jsx","path":"/posts/android-loggers-analyzed","result":{"data":{"post":{"html":"<p>At first you need to do some changes in logcat console. On the right top drop select <strong>Show only selected applications</strong>. This will filterout only the application we are working on it.</p>\n<blockquote>\n<p>All the code samples are written in kotlin.  Source code is available at <a href=\"https://github.com/Gokuldroid/AndroidTutorials\">Github</a></p>\n</blockquote>\n<p><strong>Native android logging:</strong></p>\n<p>Android has built in methods to do logging.</p>\n<p> Example,</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"> <span class=\"token keyword\">val</span> TAG <span class=\"token operator\">=</span> <span class=\"token string\">\"Demo\"</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">sampleLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Log<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello log\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"/assets/blog/android-logger/native-logger.png\" alt=\"native-logger\" style=\"width:100%\">\n<p>Simple! Is n't it?. It works well for small applications. As you can see in that picture there are lot of unnecessary logs. We can filterout by the Tag name (i.e, <strong>Demo</strong> in our case).Just type the tag name in search bar.It will show only logs with that tagname.</p>\n<p><strong>Cons:</strong></p>\n<p>1.You need to define tags each time or you have to write a helper boilerplate which adds tags automatically.I don't want to do this for all my applications , neither you.</p>\n<p>2.There is no string interpolation. (It is possible in kotlin, but in java you have to do it manually).</p>\n<p><strong>Timber from jake wharton <a href=\"https://github.com/JakeWharton/timber\">(Github link)</a></strong></p>\n<p>Example,</p>\n<p>In MainApplicaiton</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> MainApplication <span class=\"token operator\">:</span> <span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>BuildConfig<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            Timber<span class=\"token punctuation\">.</span><span class=\"token function\">plant</span><span class=\"token punctuation\">(</span>Timber<span class=\"token punctuation\">.</span><span class=\"token function\">DebugTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            Timber<span class=\"token punctuation\">.</span><span class=\"token function\">plant</span><span class=\"token punctuation\">(</span><span class=\"token function\">CrashlyticsTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">inner</span> <span class=\"token keyword\">class</span> CrashlyticsTree <span class=\"token operator\">:</span> Timber<span class=\"token punctuation\">.</span><span class=\"token function\">Tree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>priority<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span>tag<span class=\"token operator\">:</span> String<span class=\"token operator\">?</span><span class=\"token punctuation\">,</span>message<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> Throwable<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>priority <span class=\"token operator\">==</span> Log<span class=\"token punctuation\">.</span>VERBOSE <span class=\"token operator\">||</span> priority <span class=\"token operator\">==</span> Log<span class=\"token punctuation\">.</span>DEBUG <span class=\"token operator\">||</span> priority <span class=\"token operator\">==</span> Log<span class=\"token punctuation\">.</span>INFO<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//Send to crash analytics here</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">sampleLogTimber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        Timber<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world from %s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Gokul\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<p>This will produce log like this.</p>\n<img src=\"/assets/blog/android-logger/timber.png\" alt=\"native-logger\" style=\"width:100%\">\n<p><strong>Pros:</strong></p>\n<p>1.We can configure the logger by the build configuration easily. All we need is to give custom Timber.Tree. Crash analytics is much easier compared to android native logger.</p>\n<p>2.No need to define tags again and again. Timber will automatically all the call site class name in log.We can define tags for one log if we want to.</p>\n<p>3.String interpolation is possible and much better stack trace compared to native logger.</p>\n<p>4.Rock solid base for all kind of loggers.We can extend it like the way we want or we can integrate it with any other logger easily.</p>\n<p><strong>Cons :</strong></p>\n<p>1.No Provision to logging to a file.(We can achieve via custom timver tree).</p>\n<p>2.No log formatting provision.</p>\n<p>3.Adding custom tag is painful one.</p>\n<p><strong>Logger from orhanobut <a href=\"https://github.com/orhanobut/logger\">(Github link)</a></strong></p>\n<p>It is one of the advanced logger. It supports a lot of things like formatting, exporting logs to external storage and lot of customizations are available.</p>\n<p>Example,</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">//init logger</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">addLogAdapter</span><span class=\"token punctuation\">(</span>new <span class=\"token function\">AndroidLogAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"debug\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">v</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"verbose\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"information\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">wtf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"What a Terrible Failure\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Customizations</span>\n\nFormatStrategy formatStrategy <span class=\"token operator\">=</span> PrettyFormatStrategy<span class=\"token punctuation\">.</span><span class=\"token function\">newBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">showThreadInfo</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// (Optional) Whether to show thread info or not. Default true</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">methodCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\">// (Optional) How many method line to show. Default 2</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">methodOffset</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// (Optional) Hides internal method calls up to offset. Default 5</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">logStrategy</span><span class=\"token punctuation\">(</span>customLog<span class=\"token punctuation\">)</span> <span class=\"token comment\">// (Optional) Changes the log strategy to print out. Default LogCat</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">tag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My custom tag\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// (Optional) Global tag for every log. Default PRETTY_LOGGER</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">addLogAdapter</span><span class=\"token punctuation\">(</span>new <span class=\"token function\">AndroidLogAdapter</span><span class=\"token punctuation\">(</span>formatStrategy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This will produce output like this,</p>\n<img src=\"/assets/blog/android-logger/logger-orhannobut.png\" alt=\"native-logger\" style=\"width:100%\">\n<p><strong>Pros :</strong></p>\n<p>1.We can add custom tags.</p>\n<p>2.We can jump to callsite from the console it self.</p>\n<p>3.We can write our own format easily.</p>\n<p>4.It provides all the things that timber has.</p>\n<p>5.Output is nicely formatted. No need to do much work to get the sample out like given in the picture.</p>\n<p>6.It supports external storage logging.</p>\n<p>7.Good documentaion.</p>\n<p><strong>Cons:</strong></p>\n<p>1.It adds two lines extra for the dashes for every log. Once you get used to that, it will be easier.</p>\n<p>There are plenty of loggers available in github.Certain loggers are specifically desinded for some purpose.These are general purpose loggers.</p>\n<p>Here is some honurable mentions,</p>\n<p><a href=\"https://github.com/promeG/XLog\">XLog</a> - Method logger.</p>\n<p><a href=\"https://github.com/noties/Debug\">Debug</a> - Has better IDE support.</p>\n<p><a href=\"https://github.com/inaka/galgo\">Galgo</a> - On screen logger.</p>\n<p>Let me know the loggers which you use for android in the comment section below.</p>","excerpt":"At first you need to do some changes in logcat console. On the right top drop select Show only selected applications. This will filterout…","frontmatter":{"title":"Android loggers analyzed","tags":["Android","Loggers","App development"]}},"previousPost":{"frontmatter":{"title":"Better cmdline"}},"nextPost":{"frontmatter":{"title":"Java : Perf matters - 1"}}},"pageContext":{"pageId":"48aa85ea-fb33-5bdc-8f7c-9d5f4bbcd4b9","previousPagePath":"/posts/better-cmdline-1","previousItem":{"node":{"id":"1f40e538-9b9b-5ccf-b1a0-baaa1194567b","frontmatter":{"title":"Better cmdline","path":"better-cmdline-1","date":"2019-06-09T12:25:19.116Z","categories":["tools","cmdline"]}}},"previousPageId":"1f40e538-9b9b-5ccf-b1a0-baaa1194567b","nextPagePath":"/posts/java-perf-matters-1","nextItem":{"node":{"id":"ffe87b60-5fdb-5c7a-9113-fb46758c9a8f","frontmatter":{"title":"Java : Perf matters - 1","path":"java-perf-matters-1","date":"2019-04-20T10:52:53.511Z","categories":["java"]}}},"nextPageId":"ffe87b60-5fdb-5c7a-9113-fb46758c9a8f"}},"staticQueryHashes":["3128451518"]}