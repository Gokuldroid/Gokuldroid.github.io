{"componentChunkName":"component---src-components-module-blog-post-index-jsx","path":"/posts/zen-alias","result":{"data":{"post":{"html":"<p>We can configure aliases very easily in bash or zsh. but those aliases are global to all directory. sometimes we need aliases or commands only for some directories alone. this plugin makes the process easy. those aliases will be available only to that particular directory. aliases will be loaded when you <code class=\"language-text\">cd</code> into the directory and unloaded once you leave the directory.</p>\n<br>\n<h3>Configure in zsh</h3>\n<hr>\n<p>clone plugin from github</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/Gokuldroid/zen-alias ~/.oh-my-zsh/plugins/zen-alias</code></pre></div>\n<p>check if the plugin is cloned correctly</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> ~/.oh-my-zsh/plugins</code></pre></div>\n<p>open .zshrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> ~/.zshrc</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc</code></pre></div>\n<p>add zen-alias like this</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Which plugins would you like to load?</span>\n<span class=\"token comment\"># Standard plugins can be found in $ZSH/plugins/</span>\n<span class=\"token comment\"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span>\n<span class=\"token comment\"># Example format: plugins=(rails git textmate ruby lighthouse)</span>\n<span class=\"token comment\"># Add wisely, as too many plugins slow down shell startup.</span>\n<span class=\"token assign-left variable\">plugins</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">git</span>\n    zen-alias\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>updating the plugin</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>cloned directory<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> pull</code></pre></div>\n<br>\n<h3>Configure in bash</h3>\n<hr>\n<p>copy the file to root directory or somewhere in your system.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -S https://raw.githubusercontent.com/Gokuldroid/zen-alias/main/zen-alias.plugin.zsh <span class=\"token operator\">></span> ~/.zen-alias.bash</code></pre></div>\n<p>source the file in bashrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> ~/.bashrc</code></pre></div>\n<p>add this line at the end of the bashrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.zen-alias.bash</code></pre></div>\n<br>\n<h3>Aliases syntax</h3>\n<hr>\n<p>Create <em>.aliases</em> file in the root directory of the project. add your per project aliases like this. You can find a sample file <a href=\"https://github.com/Gokuldroid/zen-alias/blob/main/.aliases\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">yc: <span class=\"token function\">yarn</span> w @zen-alias/client\nys: <span class=\"token function\">yarn</span> w @zen-alias/server\nycommon: <span class=\"token function\">yarn</span> w @zen-alias/common\nybg: <span class=\"token function\">yarn</span> w @zen-alias/bg-jobs\nyb: <span class=\"token function\">yarn</span> build\nyw: <span class=\"token function\">yarn</span> <span class=\"token function\">watch</span></code></pre></div>\n<br>\n<h3>Tips</h3>\n<h4>Excluding the .aliases file in git tree</h4>\n<hr>\n<p>incase if you don't want others to use your aliases, you can add it global .gitignore or project .gitignore</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~\n<span class=\"token function\">touch</span> .gitignore_global\n<span class=\"token function\">git</span> config --global core.excludesfile ~/.gitignore_global\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\".aliases\"</span> <span class=\"token operator\">></span> ~/.gitignore_global</code></pre></div>\n<br>\n<h4>Init command for a directory.</h4>\n<hr>\n<p>we might want to execute some script as soon as we enter the project. like updating local branch or setting up nvm or rvm version etc. zen-alias provides an easy way for this.</p>\n<p>define a zen-alias like this,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">init_zen_dir: nvm use <span class=\"token operator\">&amp;&amp;</span> rvm use</code></pre></div>","excerpt":"We can configure aliases very easily in bash or zsh. but those aliases are global to all directory. sometimes we need aliases or commandsâ€¦","frontmatter":{"title":"Local aliases using zen aliases","tags":["cmdline","zsh","bash"]}},"previousPost":{"frontmatter":{"title":"Setting up github custom domain"}},"nextPost":{"frontmatter":{"title":"You tried hard and you gave your best! still you failed and it's ok!"}}},"pageContext":{"pageId":"fd7e5a88-faeb-581c-8b29-cfdfc4370424","previousPagePath":"/posts/github-custom-domain","previousItem":{"node":{"id":"02f4774a-e381-5e33-952d-3ecaf22096fb","frontmatter":{"title":"Setting up github custom domain","path":"github-custom-domain","date":"2022-09-11T12:30:34.813Z","categories":["blogging"]}}},"previousPageId":"02f4774a-e381-5e33-952d-3ecaf22096fb","nextPagePath":"/posts/you-tried-hard-and-failed-its-ok","nextItem":{"node":{"id":"4051e4cf-8b7b-58aa-b176-b5872255b9b2","frontmatter":{"title":"You tried hard and you gave your best! still you failed and it's ok!","path":"you-tried-hard-and-failed-its-ok","date":"2020-11-20T03:41:38.083Z","categories":["personal"]}}},"nextPageId":"4051e4cf-8b7b-58aa-b176-b5872255b9b2"}},"staticQueryHashes":["3128451518"]}