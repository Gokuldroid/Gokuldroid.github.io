{"componentChunkName":"component---src-components-module-blog-posts-index-jsx","path":"/blog","result":{"data":{"posts":{"edges":[{"node":{"excerpt":"Introduction As a developer, it is essential to have the right set of tools to help you streamline your workflow and boost productivityâ€¦","html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>As a developer, it is essential to have the right set of tools to help you streamline your workflow and boost productivity. With the plethora of options available, it is easy to get overwhelmed. In this blog post, we will discuss the top 10 tools every developer needs to have to make their lives easier.</p>\n<h2 id=\"1---a-great-editor--ide\" style=\"position:relative;\"><a href=\"#1---a-great-editor--ide\" aria-label=\"1   a great editor  ide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1 - A Great editor / IDE</h2>\n<p>Most of the time you will be spending your time with your code editor. thus you have to choose your main weapon and you should know how to use it effectively.everyone will have their personal preferences when it comes to code editor. you should try few and settle with what you're comfortable. I would also suggest you to learn and commandline based editor like VIM. that will be handy when you're dealing with ssh / remote machines etc. Atleast you should know how to exit VIM :P. </p>\n<h3 id=\"personal-recommendations\" style=\"position:relative;\"><a href=\"#personal-recommendations\" aria-label=\"personal recommendations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>personal recommendations:</h3>\n<ul>\n<li><a href=\"https://code.visualstudio.com/\">VS code</a> (It has great extensibility. If you know typescript I would recommend this, since you can write your own plugins for your use case).</li>\n<li><a href=\"https://www.sublimetext.com/\">Sublime text</a> (Blazing fast one).</li>\n<li>Intellij (Swiss army knife).</li>\n<li>VIM (Hard kid).</li>\n</ul>\n<h2 id=\"2---version-control-system---git\" style=\"position:relative;\"><a href=\"#2---version-control-system---git\" aria-label=\"2   version control system   git permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2 - Version control system - Git</h2>\n<p>Git is one of the most powertool that you can learn as a developer. you can learn about git and it's internals <a href=\"https://git-scm.com/book/en/v2\">here</a>. Some people will be overwhelmed with the commands that git can provide. You can use any git client like VS code (git lens plugin). I would also recommend you to setup <a href=\"./posts/git-autocompletion/\">autocompletions</a> for git if you prefer to use cmdline.  </p>\n<h2 id=\"3---a-good-note-taking-app\" style=\"position:relative;\"><a href=\"#3---a-good-note-taking-app\" aria-label=\"3   a good note taking app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3 - A good note taking app</h2>\n<p>A good note taking app will save you tone of time. I personally use <a href=\"https://www.notion.so/\">notion</a> / <a href=\"https://bear.app/\">bear notes</a>.\nNotion takes time to learn. but once you get hang of it, you will be unstoppable. I use bear notes for it's simplicity. It uses plan old markdown. thus it makes it easier to take notes. both comes with syntax highlighting, that's a must for people like us.</p>\n<h3 id=\"other-recommendations\" style=\"position:relative;\"><a href=\"#other-recommendations\" aria-label=\"other recommendations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>other recommendations:</h3>\n<ul>\n<li>Evernote</li>\n<li>Microsoft's Onenote</li>\n<li>Apple notes</li>\n<li>Google keep</li>\n</ul>\n<h2 id=\"4---a-good-terminal\" style=\"position:relative;\"><a href=\"#4---a-good-terminal\" aria-label=\"4   a good terminal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4 - A good terminal</h2>\n<p>Teh default terminal comes with mac and windows is not that great. you might want to consider <a href=\"https://cmder.app/\">cmder</a> incase if you're using windows. <a href=\"https://iterm2.com/\">iTerm2</a> + <a href=\"https://ohmyz.sh/\">zsh</a> if you're from MAC world.</p>\n<h2 id=\"5---raycast---good-all-in-one-command-prompt-mac-only\" style=\"position:relative;\"><a href=\"#5---raycast---good-all-in-one-command-prompt-mac-only\" aria-label=\"5   raycast   good all in one command prompt mac only permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5 - Raycast - good all in one command prompt (Mac only).</h2>\n<p><a href=\"https://www.raycast.com/\">Raycast</a> is much powerful than the the spotlight search in mac. It has tons of plugins to get started with. It has floating notes, clipboard history etc. you will never regret tying this. </p>\n<h2 id=\"6---commandline-json-processor\" style=\"position:relative;\"><a href=\"#6---commandline-json-processor\" aria-label=\"6   commandline json processor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6 - Commandline json processor</h2>\n<p>If you're dealing with lot of huge json content in your work, <a href=\"https://stedolan.github.io/jq/\">JQ</a> will be your best friend. you can extract / search / modify json with ease.</p>\n<h2 id=\"7---incase-if-you-hate-cmdline-and-you-have-no-choice\" style=\"position:relative;\"><a href=\"#7---incase-if-you-hate-cmdline-and-you-have-no-choice\" aria-label=\"7   incase if you hate cmdline and you have no choice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7 - Incase if you hate cmdline and you have no choice</h2>\n<p><a href=\"https://github.com/denisidoro/navi\">navi</a> can eliminate your pain of knowing lots of cmds. creating your own scripts takes time but if that clubbed with <a href=\"https://github.com/junegunn/fzf\">fzf</a> it can do amazing things. It also comes with lot of <a href=\"https://github.com/denisidoro/cheats\">plugins</a> to deal with common tools like git, aws, azure database etc.</p>\n<h2 id=\"8---postman---api-testing\" style=\"position:relative;\"><a href=\"#8---postman---api-testing\" aria-label=\"8   postman   api testing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8 - Postman - API testing</h2>\n<p><a href=\"https://www.postman.com/\">Postman</a> is a powerful API testing and development tool that makes it easy to create, test, and document APIs. With Postman, you can send requests and receive responses from APIs, create automated tests, and generate documentation for your APIs. It also provides a user-friendly interface for managing and organizing your APIs, making it a must-have tool for developers working with APIs. </p>\n<h2 id=\"9---docker\" style=\"position:relative;\"><a href=\"#9---docker\" aria-label=\"9   docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9 - Docker</h2>\n<p>Now a days docker is standard tool setting up dev environment. Your application might be using different different version of sdks. each might have it's own environment etc. handling these via docker makes it easy for everyone in your team to have a setup which will work out of the box.</p>\n<h2 id=\"10---database-viewer\" style=\"position:relative;\"><a href=\"#10---database-viewer\" aria-label=\"10   database viewer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10 - Database viewer</h2>\n<p>Most of us will deal with databases in our day to day life. having a good database viewer will save you tones of time. <a href=\"https://dbeaver.io/\">dbeaver</a> is an all in one database tool that can you help you write / execute queries and view results. it supports wide range of databases like MySQL, PostgreSQL, SQLite, Oracle, DB2, SQL Server, Sybase, MS Access, Teradata, Firebird, Apache Hive, Phoenix, Presto, etc.</p>","timeToRead":4,"frontmatter":{"title":"Top 10 tools you need as developer","date":"2023-03-11T13:07:07.000Z","tags":["Programming","Software development","Frontend developer","Backend developer"],"render_in_place":false,"path":"top-10-tools-you-need-as-dev"}}},{"node":{"excerpt":"\"Must have or we look stupid\" is applicable all the tasks that you do, all the questions that you ask to everyone. Say you're developing aâ€¦","html":"<p>\"Must have or we look stupid\" is applicable all the tasks that you do, all the questions that you ask to everyone. Say you're developing a login / signup page. at base minimum it should handle positive login and negative login cases. extensive validations, unique username check comes after those first two cases. Say all the testing is completed and we launched it to production. As a first step QA engineer will do a sanity of those bare minimum cases. if those didn't work, ultimately we will be stupid in-front of your customers right?. but have we thought about this while we ask questions to others. before asking questions to our seniors or fellow developers, we should have explored / tried very obvious solutions first ourselves. most of your team mates will be helpful even if you ask stupid questions. but doing basic exploration is the justice we can do those helpful people. and also yaa, we don't need to look stupid after asking a silly question. be a QA engineer for your own questions.</p>","timeToRead":1,"frontmatter":{"title":"mhowls (Must have or we look stupid)","date":"2023-01-27T10:34:41.000Z","tags":["general"],"render_in_place":true,"path":"til-mhowls"}}},{"node":{"excerpt":"We all know that not everyone in this world is having equal privileges. I have spent quite a lot of time fixing IE bugs in my early stage ofâ€¦","html":"<p>We all know that not everyone in this world is having equal privileges. I have spent quite a lot of time fixing IE bugs in my early stage of my career. It is super frustrating to handle all edge cases for all supported versions of every famous browsers. But do you believe that even websites doesn't have equal privileges in the browsers that we use in our day to day life?. Yes, it is true. the same code and same business logic might not work in the exact same browser, if you deploy it in the different domain. read more to understand what I am talking about</p>\n<p>you might know webkit already if you're frontend developer. incase if you don't know about it already.</p>\n<blockquote>\n<p>WebKit is a cross-platform web browser engine. On iOS and macOS, it powers Safari, Mail, iBooks, and many other applications. </p>\n</blockquote>\n<p>Recently, apple made <a href=\"https://github.com/WebKit/WebKit\">it</a> open source in github. by digging at it's <a href=\"https://github.com/WebKit/WebKit/blob/main/Source/WebCore/page/Quirks.cpp?s=08\">source</a> we can find some interesting stuffs.</p>\n<p>For example this one, on a hindsight it tries to suppress native auto correction in google docs. but why does even a browser engine developed by apple originally having some hacks to support a feature developed by google. surprising isn't it?. </p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">shouldSuppressAutocorrectionAndAutocaptializationInHiddenEditableAreasForHost</span><span class=\"token punctuation\">(</span>StringView host<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token function\">PLATFORM</span><span class=\"token punctuation\">(</span>IOS_FAMILY<span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">equalLettersIgnoringASCIICase</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token string\">\"docs.google.com\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span>\n    <span class=\"token function\">UNUSED_PARAM</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Need more?</p>\n<p>here are some examples,</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token comment\">// FIXME: Remove after the site is fixed, &lt;rdar://problem/75792913></span>\n<span class=\"token keyword\">bool</span> <span class=\"token class-name\">Quirks</span><span class=\"token operator\">::</span><span class=\"token function\">shouldHideSearchFieldResultsButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token function\">ENABLE</span><span class=\"token punctuation\">(</span>IOS_FORM_CONTROL_REFRESH<span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">needsQuirks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">topPrivatelyControlledDomain</span><span class=\"token punctuation\">(</span>m_document<span class=\"token operator\">-></span><span class=\"token function\">topDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">host</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"google.\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>They even have special handling with CSS class name.</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> <span class=\"token class-name\">Quirks</span><span class=\"token operator\">::</span><span class=\"token function\">shouldMakeTouchEventNonCancelableForTarget</span><span class=\"token punctuation\">(</span>EventTarget<span class=\"token operator\">*</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">needsQuirks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">auto</span> host <span class=\"token operator\">=</span> m_document<span class=\"token operator\">-></span><span class=\"token function\">topDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">host</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">equalLettersIgnoringASCIICase</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> <span class=\"token string\">\"www.youtube.com\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">unsigned</span> depth <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">*</span> element <span class=\"token operator\">=</span> downcast<span class=\"token operator\">&lt;</span>Element<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> element <span class=\"token operator\">&amp;&amp;</span> depth<span class=\"token punctuation\">;</span> element <span class=\"token operator\">=</span> element<span class=\"token operator\">-></span><span class=\"token function\">parentElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span>depth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token operator\">-></span><span class=\"token function\">localName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"paper-item\"</span>_s <span class=\"token operator\">&amp;&amp;</span> element<span class=\"token operator\">-></span><span class=\"token function\">classList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yt-dropdown-menu\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>And this one,</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isKinjaLoginAvatarElement</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Element<span class=\"token operator\">&amp;</span> element<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The click event handler has been found to trigger on a div or</span>\n    <span class=\"token comment\">// span with these class names, or the svg, or the svg's path.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">hasClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> classNames <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">classNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"js_switch-to-burner-login\"</span>_s<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">||</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"js_header-userbutton\"</span>_s<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">||</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sc-1il3uru-3\"</span>_s<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cIhKfd\"</span>_s<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">||</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iyvn34-0\"</span>_s<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> classNames<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bYIjtl\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> Element<span class=\"token operator\">*</span> svgElement <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is<span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        svgElement <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is<span class=\"token operator\">&lt;</span>SVGPathElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> is<span class=\"token operator\">&lt;</span>SVGSVGElement<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">parentElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        svgElement <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">parentElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>svgElement <span class=\"token operator\">&amp;&amp;</span> svgElement<span class=\"token operator\">-></span><span class=\"token function\">hasAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">auto</span> ariaLabelAttr <span class=\"token operator\">=</span> svgElement<span class=\"token operator\">-></span><span class=\"token function\">attributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNamedItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aria-label\"</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ariaLabelAttr <span class=\"token operator\">&amp;&amp;</span> ariaLabelAttr<span class=\"token operator\">-></span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"UserFilled icon\"</span>_s<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>A sample PR description of a frustrated developer</p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-txt line-numbers\"><code class=\"language-txt\"> Regression(252759@main) Unable to log into pandora.com\n\nhttps://bugs.webkit.org/show_bug.cgi?id=246430\nrdar://100243111\n\nReviewed by Geoffrey Garen and Ryosuke Niwa.\n\nWe&#39;re unable to log into pandora.com since un-exposing window.showModalDialog()\nin 252759@main. Pandora does not actually seem to call showModalDialog() but\nthey are calling its getter on the Window object. It is unclear why this is\ncausing log in to fail since there is no JS error (and other browsers don&#39;t\nexpose showModalDialog either).\n\nTo resolve the issue for now, I am adding a quirk to re-expose showModalDialog\non pandora.com. However, since they&#39;re not calling it, I am merely using\n`undefined` as value for the property.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>you can find full source code for these hacks <a href=\"https://github.com/WebKit/WebKit/blob/main/Source/WebCore/page/Quirks.cpp?s=08\">here</a>. If you ever find a bug in your site that doesn't work for some reason, don't try fix it in your code. <a href=\"https://github.com/WebKit/WebKit/commit/93d276254db4805331fa1eb9465f70d6d1b43c33\">fix</a> it in the browser engine itself like a <a href=\"https://github.com/WebKit/WebKit/commit/93d276254db4805331fa1eb9465f70d6d1b43c33\">pro frontend developer</a> and have a life with your pet dog or GF. Happy monday frontend folks :).</p>","timeToRead":4,"frontmatter":{"title":"Being a privileged website","date":"2022-10-17T09:03:29.000Z","tags":["programming","software development"],"render_in_place":false,"path":"being-a-privileged-website"}}},{"node":{"excerpt":"With ever growing tech debts in any software products, sometimes we are overwhelmed with the number of backlog  items. let's say we have aâ€¦","html":"<p>With ever growing tech debts in any software products, sometimes we are overwhelmed with the number of backlog  items. let's say we have a email validation in website during sign-up. we might want to do uniqueness and email format and max length of email according the RFC standard. we can only prevent case one by invoking backend. but we can prevent user inputting case two and three with plain javascript code. even if we forgot to add length validation, we will validate the email ownership by sending a mail to the inputted email. at worst case we will send invite link to invalid mail. according to wikipedia,</p>\n<blockquote>\n<p>the ostrich algorithm is a strategy of ignoring potential problems on the basis that they may be exceedingly rare. It is named after the ostrich effect which is defined as \"to stick one's head in the sand and pretend there is no problem\". It is used when it is more cost-effective to allow the problem to occur than to attempt its prevention.</p>\n</blockquote>\n<p>we can very well ignore the length validation since, anyways it will be validated in some other means. although email address RFC standard most likely won't change, maintaining the RFC standard based validation in our code is still and overhead. we can be <code class=\"language-text\">ostrich</code> in this case and pretend there is no problem.</p>","timeToRead":1,"frontmatter":{"title":"Ostrich algorithm","date":"2022-10-02T07:58:25.000Z","tags":["algorithm","ostrich algorithm","programming"],"render_in_place":true,"path":"til-ostrich-algorithm"}}},{"node":{"excerpt":"Cmd + shift + p -> configure user snippets -> new global snippets -> paste the following snippet -> save -> and type  Supported snippetâ€¦","html":"<p>Cmd + shift + p -> configure user snippets -> new global snippets -> paste the following snippet -> save -> and type <code class=\"language-text\">currenttime</code></p>\n\n          <div class=\"gatsby-remark-prismjs-copy-button-container\">\n            <div class=\"gatsby-remark-prismjs-copy-button\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" onclick=\"gatsbyRemarkCopyToClipboard(this, this.parentNode.nextElementSibling)\">\n              Copy\n            </div>\n          </div>\n          \n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"current time\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"prefix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"currenttime\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t<span class=\"token string\">\"$CURRENT_YEAR-$CURRENT_MONTH-${CURRENT_DATE}T$CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND.000Z\"</span>\n\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Insert current time\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Supported snippet variables can be found <a href=\"https://code.visualstudio.com/updates/v1_20#_more-snippet-variables\">here</a>.\nMore about <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\">vs code snippets</a>.</p>","timeToRead":1,"frontmatter":{"title":"Insert current time in vs code using snippet","date":"2022-09-15T22:16:11.000Z","tags":["productivity","vs code"],"render_in_place":true,"path":"til-insert-current-time-vs-code"}}}]},"categories":{"group":[{"name":"algorithm","count":1},{"name":"android","count":1},{"name":"blogging","count":1},{"name":"cmdline","count":1},{"name":"database","count":1},{"name":"general","count":1},{"name":"java","count":2},{"name":"personal","count":1},{"name":"productivity","count":5},{"name":"programming","count":6},{"name":"software development","count":2},{"name":"today I learned","count":2},{"name":"tools","count":2}]}},"pageContext":{"pageNumber":0,"humanPageNumber":1,"skip":0,"limit":5,"numberOfPages":3,"previousPagePath":"","nextPagePath":"/blog/page/2"}},"staticQueryHashes":["3128451518"]}