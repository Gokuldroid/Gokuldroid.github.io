{"componentChunkName":"component---src-components-module-blog-posts-index-jsx","path":"/blog","result":{"data":{"posts":{"edges":[{"node":{"excerpt":"Cmd + shift + p -> configure user snippets -> new global snippets -> paste the following cmd -> save -> and type  Supported snippet…","html":"<p>Cmd + shift + p -> configure user snippets -> new global snippets -> paste the following cmd -> save -> and type <code class=\"language-text\">currenttime</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n\t&quot;current time&quot;: {\n\t\t&quot;prefix&quot;: &quot;currenttime&quot;,\n\t\t&quot;body&quot;: [\n\t\t\t&quot;$CURRENT_YEAR-$CURRENT_MONTH-${CURRENT_DATE}T$CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND.000Z&quot;\n\t\t],\n\t\t&quot;description&quot;: &quot;Insert current time&quot;\n\t}\n}</code></pre></div>\n<p>Supported snippet variables can be found <a href=\"https://code.visualstudio.com/updates/v1_20#_more-snippet-variables\">here</a>.\nMore about <a href=\"https://code.visualstudio.com/docs/editor/userdefinedsnippets\">vs code snippets</a>.</p>","timeToRead":1,"frontmatter":{"title":"Insert current time in vs code using snippet","date":"2022-09-15T22:16:11.000Z","tags":["productivity","vs code"],"render_in_place":true,"path":"til-insert-current-time-vs-code"}}},{"node":{"excerpt":"Setting up a custom domain for our github pages has lot of benefits but at the same time it requires lot of patience. This article aims to…","html":"<p>Setting up a custom domain for our github pages has lot of benefits but at the same time it requires lot of patience. This article aims to give a picture about how the entire thing works and step-by-step guide for the same. I am taking my github profile <code class=\"language-text\">Gokuldroid</code> and my custom domain <code class=\"language-text\">codefromdude.com</code> as example here.</p>\n<h4>Reasons on why you need to setup custom domain for your github page:</h4>\n<blockquote>\n<ul>\n<li>The default domain provided by github &#x3C;username.github.io> is not intuitive.</li>\n<li>We will lose all google indexing if we want to move away from github.</li>\n<li>For more personal branding.</li>\n<li>And we're devs and we want problems ;-).</li>\n</ul>\n</blockquote>\n<h4>Prerequisites:</h4>\n<blockquote>\n<ul>\n<li>Github account</li>\n<li>Cloudflare account (github doesn't support SSL termination for custom domains. we can use cloudflare to do the SSL termination for our blog for free)</li>\n<li>A repository (<your-github-username>.github.io) with two files (index.html and CNAME)</li>\n<li>A domain registered in any providers (Ex, Godaddy, Namecheap, Cloudflare etc)</li>\n<li>Bit of patience.</li>\n</ul>\n</blockquote>\n<h4>Setting up your github repository (skip this if you already have site published at <code class=\"language-text\">&lt;github-user-name&gt;.github.io</code>):</h4>\n<ul>\n<li>First you have to create a public repository in this format <code class=\"language-text\">(&lt;github-user-name&gt;.github.io -&gt; gokuldroid.github.io)</code></li>\n<li>\n<p>clone github repo locally using this command and <code class=\"language-text\">cd</code> into the folder and create <code class=\"language-text\">index.html</code> file</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/<span class=\"token operator\">&lt;</span>your-github-username<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>your-github-username<span class=\"token operator\">></span>.github.io\n<span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>your-github-username<span class=\"token operator\">></span>.github.io\n<span class=\"token function\">touch</span> index.html</code></pre></div>\n</li>\n<li>Add a <code class=\"language-text\">index.html</code> in the root folder </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>\n<p>Push the changes to remote</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> --all\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Initial commit\"</span>\n<span class=\"token function\">git</span> push -u origin main</code></pre></div>\n</li>\n<li>Fire up a browser and go to <code class=\"language-text\">https://&lt;your-github-username&gt;.github.io</code>. Now you have successfully setup a personal page in github.</li>\n</ul>\n<h4>Setting up domain in cloudflare and github:</h4>\n<ul>\n<li>\n<p>create CNAME file with your custom domain (should be in single line without any spaces. <a href=\"https://github.com/Gokuldroid/Gokuldroid.github.io/blob/master/CNAME\">reference</a>).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd &lt;your-repository&gt;\necho &quot;&lt;your-custom-domain&gt;&quot; &gt; CNAME\ngit add --all\ngit commit -m &quot;Add CNAME file&quot;\ngit push -u origin main</code></pre></div>\n</li>\n<li>Go to github profile settings -> Code, planning, and automation -> Pages -> click on <code class=\"language-text\">Add domain</code></li>\n<li>Type your custom domain name -> click <code class=\"language-text\">Add domain</code>. This will take you to the following the page like this. we need this txt record and value for the next step. keep this handy.</li>\n</ul>\n<img src=\"/assets/blog/github-custom-domain/github-add-domain.png\" alt=\"github add domain\" style=\"width:60%\">\n<img src=\"/assets/blog/github-custom-domain/github-txt-record.png\" alt=\"github txt records\" style=\"width:60%\">\n<ul>\n<li>Go to cloudflare -> websites -> Add website -> Type your custom domain -> click on next.\n<img src=\"/assets/blog/github-custom-domain/add-website.png\" alt=\"cloud flare add website\" style=\"width:80%\"></li>\n<li>Select your plan that you need. (you can choose free plan)-> click next.\n<img src=\"/assets/blog/github-custom-domain/select-plan.png\" alt=\"select plan\" style=\"width:70%\"></li>\n<li>Configure DNS records like shown in the below picture or you can simple modify the following (dns-text-records.txt) and import in cloudflare DNS manager (you need to modify custom domain, github username and txt record from the above step).\n<img src=\"/assets/blog/github-custom-domain/review-dns-records.png\" alt=\"dns selection\" style=\"width:100%\"></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">A records\n185.199.111.153\n185.199.110.153\n185.199.109.153\n185.199.108.153\n\nAAAA records\n2606:50c0:8003::153\n2606:50c0:8002::153\n2606:50c0:8001::153\n2606:50c0:8000::153</code></pre></div>\n<p>dns-text-records.txt</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">&lt;your-custom-domain&gt;\t3600\tIN\tSOA\t&lt;your-custom-domain&gt; root.&lt;your-custom-domain&gt; 2041457699 7200 3600 86400 3600\n\n;; A Records\n&lt;your-custom-domain&gt;.\t1\tIN\tA\t185.199.111.153\n&lt;your-custom-domain&gt;.\t1\tIN\tA\t185.199.110.153\n&lt;your-custom-domain&gt;.\t1\tIN\tA\t185.199.109.153\n&lt;your-custom-domain&gt;.\t1\tIN\tA\t185.199.108.153\n\n;; AAAA Records\n&lt;your-custom-domain&gt;.\t1\tIN\tAAAA\t2606:50c0:8003::153\n&lt;your-custom-domain&gt;.\t1\tIN\tAAAA\t2606:50c0:8002::153\n&lt;your-custom-domain&gt;.\t1\tIN\tAAAA\t2606:50c0:8001::153\n&lt;your-custom-domain&gt;.\t1\tIN\tAAAA\t2606:50c0:8000::153\n\n;; CNAME Records\nwww.&lt;your-custom-domain&gt;.\t1\tIN\tCNAME\t&lt;your-github-username&gt;.github.io.\n\n;; TXT Records\n_github-pages-challenge-&lt;your-github-username&gt;.&lt;your-custom-domain&gt;.\t1\tIN\tTXT\t&quot;&lt;text-record-from-github-domains&gt;&quot;</code></pre></div>\n<ul>\n<li>Copy the name servers in cloudflare and Configure it in your domain provider. (For example I am using godaddy for my site). Once you configure this DNS will be manged by cloudflare. This is critical since all the above configuration won't work if you miss this step. </li>\n</ul>\n<blockquote>\n<p>This will take few hours to take effect.</p>\n</blockquote>\n<img src=\"/assets/blog/github-custom-domain/change-nameservers.png\" alt=\"cloudflare verification\" style=\"width:100%\">\n<p>-</p>\n<img src=\"/assets/blog/github-custom-domain/godaddy-nameserver.png\" alt=\"godaddy name server\" style=\"width:60%\"> \n<ul>\n<li>once the nameserver changes got propagated, you can verify the same in cloudflare console. once you verified, the site will be active in cloud flare. till now we have configured the domain provider and cloudflare.\n<img src=\"/assets/blog/github-custom-domain/site-overview.png\" alt=\"site active\" style=\"width:60%\"></li>\n<li>Now, head back to github and verify the domain in your profile settings. If not able to do this, wait for sometime for the cloudflare changes to propagate.\n<img src=\"/assets/blog/github-custom-domain/github-txt-record.png\" alt=\"github domain verification\" style=\"width:60%\"></li>\n<li>Once you verified the domain in github, configure the same in github repository settings under custom domains settings.\n<img src=\"/assets/blog/github-custom-domain/github-pages-settings.png\" alt=\"\" style=\"width:80%\"></li>\n<li>Congratulations, now your github site will be serving with your custom domain. you can enable HTTPS settings in cloudflare and github repository settings to serve HTTPS by default.</li>\n</ul>","timeToRead":4,"frontmatter":{"title":"Setting up github custom domain","date":"2022-09-11T12:30:34.813Z","tags":["git","blogging","cloudflare","github custom domain","how to setup github custom domain?"],"render_in_place":null,"path":"github-custom-domain"}}},{"node":{"excerpt":"We can configure aliases very easily in bash or zsh. but those aliases are global to all directory. sometimes we need aliases or commands…","html":"<p>We can configure aliases very easily in bash or zsh. but those aliases are global to all directory. sometimes we need aliases or commands only for some directories alone. this plugin makes the process easy. those aliases will be available only to that particular directory. aliases will be loaded when you <code class=\"language-text\">cd</code> into the directory and unloaded once you leave the directory.</p>\n<br>\n<h3>Configure in zsh</h3>\n<hr>\n<p>clone plugin from github</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/Gokuldroid/zen-alias ~/.oh-my-zsh/plugins/zen-alias</code></pre></div>\n<p>check if the plugin is cloned correctly</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> ~/.oh-my-zsh/plugins</code></pre></div>\n<p>open .zshrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> ~/.zshrc</code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc</code></pre></div>\n<p>add zen-alias like this</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Which plugins would you like to load?</span>\n<span class=\"token comment\"># Standard plugins can be found in $ZSH/plugins/</span>\n<span class=\"token comment\"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span>\n<span class=\"token comment\"># Example format: plugins=(rails git textmate ruby lighthouse)</span>\n<span class=\"token comment\"># Add wisely, as too many plugins slow down shell startup.</span>\n<span class=\"token assign-left variable\">plugins</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">git</span>\n    zen-alias\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>updating the plugin</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>cloned directory<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> pull</code></pre></div>\n<br>\n<h3>Configure in bash</h3>\n<hr>\n<p>copy the file to root directory or somewhere in your system.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -S https://raw.githubusercontent.com/Gokuldroid/zen-alias/main/zen-alias.plugin.zsh <span class=\"token operator\">></span> ~/.zen-alias.bash</code></pre></div>\n<p>source the file in bashrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">open</span> ~/.bashrc</code></pre></div>\n<p>add this line at the end of the bashrc</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> ~/.zen-alias.bash</code></pre></div>\n<br>\n<h3>Aliases syntax</h3>\n<hr>\n<p>Create <em>.aliases</em> file in the root directory of the project. add your per project aliases like this. You can find a sample file <a href=\"https://github.com/Gokuldroid/zen-alias/blob/main/.aliases\">here</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yc: yarn w @zen-alias/client\nys: yarn w @zen-alias/server\nycommon: yarn w @zen-alias/common\nybg: yarn w @zen-alias/bg-jobs\nyb: yarn build\nyw: yarn watch</code></pre></div>\n<br>\n<h3>Tips</h3>\n<h4>Excluding the .aliases file in git tree</h4>\n<hr>\n<p>incase if you don't want others to use your aliases, you can add it global .gitignore or project .gitignore</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ~\n<span class=\"token function\">touch</span> .gitignore_global\n<span class=\"token function\">git</span> config --global core.excludesfile ~/.gitignore_global\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\".aliases\"</span> <span class=\"token operator\">></span> ~/.gitignore_global</code></pre></div>\n<br>\n<h4>Init command for a directory.</h4>\n<hr>\n<p>we might want to execute some script as soon as we enter the project. like updating local branch or setting up nvm or rvm version etc. zen-alias provides an easy way for this.</p>\n<p>define a zen-alias like this,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">init_zen_dir: nvm use <span class=\"token operator\">&amp;&amp;</span> rvm use</code></pre></div>","timeToRead":2,"frontmatter":{"title":"Local aliases using zen aliases","date":"2021-02-05T19:22:59.656Z","tags":["cmdline","zsh","bash"],"render_in_place":null,"path":"zen-alias"}}},{"node":{"excerpt":"I was reading a book called Outliers . that made me retrospect my life and the role of luck in my life. There are a lot of factors for one's…","html":"<p>I was reading a book called <strong>Outliers</strong> . that made me retrospect my life and the role of luck in my life. There are a lot of factors for one's success, even with a better personal life with some support from others, one can have an edge in your professional life. There are things we can't control in your life. For example, our birthplace or the time. You and the person who works in a different country doing the same job might be earning and getting more rewards than you. It doesn't mean that you're doing less work and you're not capable. you're just in the wrong place. To be successful, one has to be in the right place at the right time. </p>\n<p>As a developer, I want stats or exact numbers, not just the stories. So, I decided to simulate the role of luck in an interview. I assumed luck just plays 5% in the interview selection and wanted to compare with the interview result that's purely dependant on talent.</p>\n<p><strong>Simulation process:</strong></p>\n<p>1.There will be 500 persons with uniformly distributed random luck and talent on a scale of 0 - 100.</p>\n<p>2.There are two scores with/without luck. </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">score</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">getTalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// assuming luck plays just 5 percent in your life</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">scoreWithLuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">getTalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.95</span> <span class=\"token operator\">+</span> <span class=\"token function\">getLuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>3.I will select 10 percent of total people based on these two scores as a two separate selection group.\n4.compare the selection and find out how much luck can make a difference in the final result.</p>\n<p>To my surprise, even <strong>5%</strong> luck made a difference up to <strong>24%</strong> when I run the simulation ten times. To give you some idea, if a hundred people are getting interviewed for ten positions, you might be one of two persons who get rejected because of luck.</p>\n<p>But if you do the interview twice, your chance of getting rejected because of luck is <strong>24% of 24%</strong> (<strong>5%</strong>). So, try one more time and prove <strong>luck means nothing in your life</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PriorityQueue</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Random</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Luck</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Random</span> random <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> pickSize <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PriorityQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">></span></span> withoutLuck <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparingDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token operator\">::</span><span class=\"token function\">score</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PriorityQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">></span></span> withLuck <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">.</span><span class=\"token function\">comparingDouble</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token operator\">::</span><span class=\"token function\">scoreWithLuck</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            person<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            person<span class=\"token punctuation\">.</span><span class=\"token function\">setTalent</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            person<span class=\"token punctuation\">.</span><span class=\"token function\">setLuck</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            withLuck<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            withoutLuck<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> selectedWithLuck <span class=\"token operator\">=</span> withLuck<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pickSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> selectedWithoutLuck <span class=\"token operator\">=</span> withoutLuck<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span>pickSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> blindLuck <span class=\"token operator\">=</span> selectedWithLuck<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">-></span> <span class=\"token operator\">!</span>selectedWithoutLuck<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"with luck\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>selectedWithLuck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"without luck\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>selectedWithoutLuck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"========================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blind selection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>blindLuck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=========================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blind luck %\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> blindLuck<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> pickSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> talent<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> luck<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getTalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> talent<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTalent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> talent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talent <span class=\"token operator\">=</span> talent<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getLuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> luck<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setLuck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> luck<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>luck <span class=\"token operator\">=</span> luck<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">score</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">getTalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// assuming luck plays just 5 percent in your life</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">scoreWithLuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">getTalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.95</span> <span class=\"token operator\">+</span> <span class=\"token function\">getLuck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":3,"frontmatter":{"title":"You tried hard and you gave your best! still you failed and it's ok!","date":"2020-11-20T03:41:38.083Z","tags":["personal","motivation","outliers"],"render_in_place":null,"path":"you-tried-hard-and-failed-its-ok"}}},{"node":{"excerpt":"Remembering the branches and all the available commands are daunting work in git. what if the commands auto-completes itself like shown in…","html":"<img src=\"/assets/blog/git-autocompletion/git-autocompletion.gif\" alt=\"git auto completion\" style=\"width:100%\">\n<p>Remembering the branches and all the available commands are daunting work in git. what if the commands auto-completes itself like shown in the above gif. we can save a lot of typing. not all of us have a typing speed of 90+ wpm right?.</p>\n<p>For this, we need to configure our terminal with git auto-completion snippet. you can download the bash-completion file from <a href=\"https://github.com/git/git/tree/master/contrib/completion\">here</a>.\nDownload the file from these links if you're using <a href=\"https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash\">bash</a>, or <a href=\"https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.zsh\">zsh</a> or <a href=\"https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh\">shell</a>.</p>\n<p>You can download with simple curl command also like this,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash</code></pre></div>\n<p>and add the downloaded file in <em>~/.bashrc</em> or <em>~/.zshrc</em> depends on your terminal like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># bash</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -f ~/.git-completion.bash <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">.</span> ~/.git-completion.bash\n<span class=\"token keyword\">fi</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#zsh</span>\n<span class=\"token builtin class-name\">source</span> ~/.git-completion.bash</code></pre></div>\n<p>restart the terminal and enjoy the git auto-completion.</p>","timeToRead":1,"frontmatter":{"title":"Git autocompletion","date":"2020-11-08T12:30:34.813Z","tags":["git","cmdline"],"render_in_place":null,"path":"git-autocompletion"}}}]},"categories":{"group":[{"name":"android","count":1},{"name":"blogging","count":1},{"name":"cmdline","count":1},{"name":"database","count":1},{"name":"java","count":2},{"name":"personal","count":1},{"name":"productivity","count":4},{"name":"programming","count":4},{"name":"today I learned","count":1},{"name":"tools","count":1}]}},"pageContext":{"pageNumber":0,"humanPageNumber":1,"skip":0,"limit":5,"numberOfPages":2,"previousPagePath":"","nextPagePath":"/blog/page/2"}},"staticQueryHashes":["3128451518"]}