{"version":3,"sources":["webpack:///./src/components/shared/formatted-date/index.jsx","webpack:///./src/components/shared/pagination/index.jsx","webpack:///./src/components/module/blog/posts/base.jsx","webpack:///./src/images/site-logo.png","webpack:///./src/components/utils/colors.js","webpack:///./src/components/shared/categories/index.jsx","webpack:///./src/components/shared/markdown-content/index.jsx","webpack:///./src/components/module/blog/posts/category/index.jsx","webpack:///./src/components/shared/jbootstrap/index.jsx","webpack:///./src/components/shared/header/index.jsx"],"names":["FormattedDate","render","date","Date","parse","this","props","localDate","toLocaleDateString","Component","Pagination","className","class","role","previousPage","to","aria-label","key","low","Math","max","currentPage","high","min","totalPages","items","itr","pageLink","path","push","PaginationLinks","nextPage","GistBody","node","frontmatter","render_in_place","html","excerpt","BlogPostGist","link","handleClick","window","open","onClick","onKeyDown","title","timeToRead","tags","map","tag","Base","previousPagePath","nextPagePath","numberOfPages","humanPageNumber","categories","posts","currentCategory","edge","module","exports","COLORS","getColorForIndex","index","length","getButtonClassName","category","toLowerCase","href","sort","cat1","cat2","name","count","MarkdownContent","dangerouslySetInnerHTML","__html","Blog","pageContext","data","group","edges","pageNumber","pageQuery","JBootstrap","src","Pages","id","Header","Img","alt","type","data-toggle","data-target","aria-controls","aria-expanded"],"mappings":"0JAGqBA,E,kGACnBC,OAAA,WACE,IAAIC,EAAOC,KAAKC,MAAMC,KAAKC,MAAMJ,MAC7BK,EAAY,IAAIJ,KAAKD,GAAMM,qBAC/B,OACE,oCACGD,I,GANkCE,a,kCCuB3C,IAwCeC,EAxCI,SAAAJ,GACjB,OACE,yBAAKK,UAAU,wBACb,yBAAKA,UAAU,qCACb,yBAAKC,MAAM,YAAYC,KAAK,SACzBP,EAAMQ,aACL,kBAAC,OAAD,CACEC,GAAIT,EAAMQ,aACVH,UAAU,0BACVK,aAAW,OACXC,IAAI,YAJN,YAQE,KAnCd,SAAyBX,GAIvB,IAHA,IAAIY,EAAMC,KAAKC,IAAId,EAAMe,YAAc,EAAG,GACtCC,EAAOH,KAAKI,IAAIjB,EAAMe,YAAc,EAAGf,EAAMkB,YAC7CC,EAAQ,GACHC,EAAMR,EAAKQ,GAAOJ,EAAMI,IAAO,CACtC,IAAIC,EAAWrB,EAAMsB,KAAKF,GAC1BD,EAAMI,KACJ,kBAAC,OAAD,CACEd,GAAIY,EACJhB,UAAS,YACPL,EAAMe,cAAgBK,EAAM,GAAK,YAD1B,UAGTT,IAAKS,GAEJA,IAIP,OAAOD,EAkBEK,CAAgBxB,GAChBA,EAAMyB,SACL,kBAAC,OAAD,CACEhB,GAAIT,EAAMyB,SACVpB,UAAU,0BACVK,aAAW,OACXC,IAAI,QAJN,QAQE,S,wBC1Cd,SAASe,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAClB,OAAGA,EAAKC,YAAYC,gBAEhB,kBAAC,IAAD,CAAiBC,KAAMH,EAAKG,OAI5B,yBAAKzB,UAAU,aAAasB,EAAKI,SAKvC,SAASC,EAAT,GAAiC,IAATL,EAAQ,EAARA,KAClBM,EAAI,UAAaN,EAAKC,YAAYN,KAElCY,EAAc,kBAAMC,OAAOC,KAAKH,EAAM,WAE1C,OACE,yBAAKI,QAASH,EAAa7B,UAAU,qBAAqBiC,UAAWJ,GACnE,uBAAG7B,UAAU,cAAcsB,EAAKC,YAAYW,OAC5C,uBAAGlC,UAAU,aAAb,IAA0B,kBAAC,EAAD,CAAeT,KAAM+B,EAAKC,YAAYhC,OAAhE,MAAkF+B,EAAKa,WAAvF,aACA,kBAACd,EAAD,CAAUC,KAAMA,IAChB,yBAAKtB,UAAU,aAEXsB,EAAKC,YAAYa,KAAOd,EAAKC,YAAYa,KAAKC,KAAI,SAACC,GAAD,OAAS,0BAAMhC,IAAKgC,GAAMA,MAAe,KAwBtFC,IAhBF,SAAC5C,GAAW,IACf6C,EAA6G7C,EAA7G6C,iBAAkBC,EAA2F9C,EAA3F8C,aAAcC,EAA6E/C,EAA7E+C,cAAeC,EAA8DhD,EAA9DgD,gBAAiB1B,EAA6CtB,EAA7CsB,KAAM2B,EAAuCjD,EAAvCiD,WAAYC,EAA2BlD,EAA3BkD,MAAOC,EAAoBnD,EAApBmD,gBAEjG,OAAQ,oCACN,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKZ,MAAM,SACX,yBAAKlC,UAAU,sBACb,kBAAC,IAAD,CAAY4C,WAAYA,EAAYE,gBAAiBA,IACrD,yBAAK9C,UAAU,4BACZ6C,EAAMR,KAAI,SAACU,GAAD,OAAU,kBAACpB,EAAD,CAAcL,KAAMyB,EAAKzB,KAAMhB,IAAKyC,EAAKzB,KAAKC,YAAYN,UAC9EyB,EAAgB,EAAI,kBAAC,EAAD,CAAY7B,WAAY6B,EAAehC,YAAaiC,EAAiBvB,SAAUqB,EAActC,aAAcqC,EAAkBvB,KAAMA,IAAW,U,uECnD3K+B,EAAOC,QAAU,IAA0B,yD,kCCA3C,IAAMC,EAAS,CAAC,SAAU,SAAU,QAAS,OAAQ,QAW9C,SAASC,EAAiBC,GAC7B,OAAOF,EAAOE,EAAQF,EAAOG,Q,yBCR3BC,G,UAAqB,SAACC,EAAUT,EAAiBM,GACrD,OAAGG,EAASC,gBAAkBV,EACtB,OAAQK,EAAiBC,GAEzB,eAAgBD,EAAiBC,KAI5B,oBAAGR,EAAH,EAAGA,WAAYE,EAAf,EAAeA,gBAAf,OACb,yBAAK9C,UAAS,6BACZ,yBAAKA,UAAU,oBACb,uBACEA,UAAS,OAASsD,EAAmB,MAAOR,EAAiB,GAApD,mCACTW,KAAI,QACJvD,KAAK,UAHP,OAOC0C,EACEc,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,KAAOD,EAAKC,QACtCxB,KAAI,SAACkB,EAAUH,GAAX,OACH,uBACEpD,UAAS,OAASsD,EAAmBC,EAASM,KAAMf,EAAiBM,GAA5D,mCACTK,KAAI,kBAAoBF,EAASM,KAA7B,IACJvD,IAAKiD,EAASM,KACd3D,KAAK,UAEJqD,EAASM,KANZ,IAMmBN,EAASO,MAAQ,EAAjB,IAAyBP,EAASO,MAAlC,IAA6C,W,yDC/B1E,mCAWeC,IARS,SAACpE,GACvB,OACE,yBAAKK,UAAU,sBACb,yBAAKgE,wBAAyB,CAAEC,OAAQtE,EAAM8B,W,yDCNpD,sFAgBeyC,UAZF,SAACvE,GAAW,IACfwE,EAAgBxE,EAAhBwE,YACA3B,EAA6E2B,EAA7E3B,iBAAkBC,EAA2D0B,EAA3D1B,aAAcC,EAA6CyB,EAA7CzB,cAAeC,EAA8BwB,EAA9BxB,gBAAiBY,EAAaY,EAAbZ,SAClEX,EAAajD,EAAMyE,KAAKxB,WAAWyB,MACnCxB,EAAQlD,EAAMyE,KAAKvB,MAAMyB,MAG/B,OAAQ,oCACN,kBAAC,IAAD,CAAM9B,iBAAkBA,EAAkBC,aAAcA,EAAcC,cAAeA,EAAeC,gBAAiBA,EAAiB1B,KAH3H,SAACsD,GAAD,OAA+B,IAAfA,EAAA,kBAAqChB,EAArC,kBAAoEA,EAApE,SAAqFgB,GAGkC3B,WAAYA,EAAYC,MAAOA,EAAOC,gBAAiBS,MAOtM,IAAMiB,EAAS,c,+HCRPC,EARI,kBACjB,kBAAC,IAAD,KACE,4BAAQC,IAAI,qEACZ,4BAAQA,IAAI,8EACZ,4BAAQA,IAAI,0E,qBCDVC,EAAQ,kBACZ,yBAAK3E,UAAU,+CAA+C4E,GAAG,oBAC/D,wBAAI5E,UAAU,cACZ,wBAAIA,UAAU,YAAW,kBAAC,OAAD,CAAMA,UAAU,WAAWI,GAAG,SAA9B,SACzB,wBAAIJ,UAAU,YAAW,kBAAC,OAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,gBAmBhByE,IAbA,kBACb,oCACE,kBAAC,EAAD,MACA,yBAAK7E,UAAU,oFACb,kBAAC,OAAD,CAAMA,UAAU,eAAeI,GAAG,KAAlC,IAAuC,yBAAKsE,IAAKI,IAAKC,IAAI,KAA1D,SAAoE,mCAApE,SAAwF,oCAAxF,SACA,4BAAQ/E,UAAU,iBAAiBgF,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,8BAA8BC,gBAAc,QAAQ/E,aAAW,qBACnL,0BAAML,UAAU,yBAElB,kBAAC,EAAD","file":"component---src-components-module-blog-posts-category-index-jsx-0c18e6a8dca62dccc6ba.js","sourcesContent":["\nimport React, { Component } from 'react'\n\nexport default class FormattedDate extends Component {\n  render() {\n    var date = Date.parse(this.props.date);\n    var localDate = new Date(date).toLocaleDateString();\n    return (\n      <>\n        {localDate}\n      </>\n    )\n  }\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./styles.scss\"\n\nfunction PaginationLinks(props) {\n  let low = Math.max(props.currentPage - 2, 1)\n  let high = Math.min(props.currentPage + 2, props.totalPages)\n  let items = []\n  for (let itr = low; itr <= high; itr++) {\n    let pageLink = props.path(itr)\n    items.push(\n      <Link\n        to={pageLink}\n        className={`btn btn-${\n          props.currentPage === itr ? \"\" : \"outline-\"\n        }primary`}\n        key={itr}\n      >\n        {itr}\n      </Link>\n    )\n  }\n  return items\n}\n\nconst Pagination = props => {\n  return (\n    <div className=\"pagination-container\">\n      <div className=\"d-flex justify-content-center m-3\">\n        <div class=\"btn-group\" role=\"group\">\n          {props.previousPage ? (\n            <Link\n              to={props.previousPage}\n              className=\"btn btn-outline-primary\"\n              aria-label=\"Next\"\n              key=\"Previous\"\n            >\n              Previous\n            </Link>\n          ) : null}\n          {PaginationLinks(props)}\n          {props.nextPage ? (\n            <Link\n              to={props.nextPage}\n              className=\"btn btn-outline-primary\"\n              aria-label=\"Next\"\n              key=\"Next\"\n            >\n              Next\n            </Link>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nPagination.propTypes = {\n  totalPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  nextPage: PropTypes.string,\n  previousPage: PropTypes.string,\n  path: PropTypes.func,\n}\n\nexport default Pagination\n","import React from \"react\"\nimport './styles.scss'\nimport Header from \"@components/shared/header\"\nimport FormattedDate from '@components/shared/formatted-date';\nimport MarkDownContent from '@components/shared/markdown-content';\nimport Pagination from '@components/shared/pagination';\nimport SEO from \"@components/seo\";\nimport Categories from '@components/shared/categories';\n\nfunction GistBody({ node }) {\n  if(node.frontmatter.render_in_place) {\n    return (\n      <MarkDownContent html={node.html} />\n    )\n  } else {\n    return (\n      <div className=\"post-gist\">{node.excerpt}</div>\n    )\n  }\n}\n\nfunction BlogPostGist({ node }) {\n  var link = `/posts/${node.frontmatter.path}`\n\n  var handleClick = () => window.open(link, \"_blank\");\n\n  return (\n    <div onClick={handleClick} className=\"post border-bottom\" onKeyDown={handleClick}>\n      <p className=\"post-title\">{node.frontmatter.title}</p>\n      <p className=\"post-info\"> <FormattedDate date={node.frontmatter.date} /> &diams; {node.timeToRead} min read</p>\n      <GistBody node={node}/>\n      <div className=\"post-tags\">\n        {\n          node.frontmatter.tags ? node.frontmatter.tags.map((tag) => <span key={tag}>{tag}</span>) : ''\n        }\n      </div>\n    </div>\n  )\n}\n\n\nconst Base = (props) => {\n  const { previousPagePath, nextPagePath, numberOfPages, humanPageNumber, path, categories, posts, currentCategory } = props;\n\n  return (<>\n    <Header/>\n    <SEO title=\"Blog\"/>\n    <div className=\"row blog-container\">\n      <Categories categories={categories} currentCategory={currentCategory}/>\n      <div className=\"col posts-container card\">\n        {posts.map((edge) => <BlogPostGist node={edge.node} key={edge.node.frontmatter.path} />)}\n        {numberOfPages > 1 ? <Pagination totalPages={numberOfPages} currentPage={humanPageNumber} nextPage={nextPagePath} previousPage={previousPagePath} path={path} /> : null}\n      </div>\n    </div>\n  </>)\n}\n\nexport default Base","module.exports = __webpack_public_path__ + \"static/site-logo-ceb794f98dce57aa130f0fe0f5e9ce5d.png\";","const COLORS = [\"purple\", \"orange\", \"green\", \"blue\", \"grey\"];\n\nexport function getColor(text) {\n    let asciiVal = 0;\n    for (const c of text) {\n        asciiVal += c.charCodeAt(0);\n    }\n    console.log(asciiVal);\n    return COLORS[asciiVal % COLORS.length];\n}\n\nexport function getColorForIndex(index) {\n    return COLORS[index % COLORS.length];\n}","import { getColorForIndex } from \"@components/utils/colors\"\nimport React from \"react\"\nimport \"./styles.scss\"\n\nconst getButtonClassName = (category, currentCategory, index) => {\n  if(category.toLowerCase() === currentCategory) {\n    return `btn-${getColorForIndex(index)}`;\n  } else {\n    return `btn-outline-${getColorForIndex(index)}`\n  }\n}\n\nexport default ({ categories, currentCategory }) => (\n  <div className={`categories-container mb-4`}>\n    <div className=\"d-flex flex-wrap\">\n      <a\n        className={`btn ${getButtonClassName('all', currentCategory, 4)} text-uppercase fw-bold d-inline`}\n        href={`/blog`}\n        role=\"button\"\n      >\n        all\n      </a>\n      {categories\n        .sort((cat1, cat2) => cat1.name > cat2.name)\n        .map((category, index) => (\n          <a\n            className={`btn ${getButtonClassName(category.name, currentCategory, index)} text-uppercase fw-bold d-inline`}\n            href={`/blog/category/${category.name}/`}\n            key={category.name}\n            role=\"button\"\n          >\n            {category.name} {category.count > 0 ? `(${category.count})` : \"\"}\n          </a>\n        ))}\n    </div>\n  </div>\n)\n","import React from \"react\"\nimport './styles.scss'\n\nconst MarkdownContent = (props) => {\n  return (\n    <div className=\"markdown-container\">\n      <div dangerouslySetInnerHTML={{ __html: props.html }} />\n    </div>\n  )\n}\n\nexport default MarkdownContent;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Base from '@components/module/blog/posts/base';\n\nconst Blog = (props) => {\n  const { pageContext } = props;\n  const { previousPagePath, nextPagePath, numberOfPages, humanPageNumber, category } = pageContext;\n  const categories = props.data.categories.group;\n  const posts = props.data.posts.edges;\n  const path = (pageNumber) => pageNumber === 1 ? `/blog/category/${category}` : `/blog/category/${category}/page/${pageNumber}`\n\n  return (<>\n    <Base previousPagePath={previousPagePath} nextPagePath={nextPagePath} numberOfPages={numberOfPages} humanPageNumber={humanPageNumber} path={path} categories={categories} posts={posts} currentCategory={category}/>\n  </>)\n}\n\nexport default Blog\n\n\nexport const pageQuery = graphql`\nquery($category: String, $skip: Int!, $limit: Int!) {\n  posts: allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n    filter: { frontmatter: { categories: { in: [$category] } } }\n    skip: $skip\n    limit: $limit\n  ) {\n    edges {\n      node {\n        excerpt\n        html\n        timeToRead\n        frontmatter {\n          title\n          date\n          tags\n          render_in_place\n          path\n        }\n      }\n    }\n  }\n\n  categories: allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n    limit: 2000\n  ) {\n    group(field: frontmatter___categories) {\n      name: fieldValue\n      count: totalCount\n    }\n  }\n}`;\n","import Helmet from \"react-helmet\"\nimport React from \"react\"\n\nconst JBootstrap = () => (\n  <Helmet>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n  </Helmet>\n)\n\nexport default JBootstrap","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport './styles.scss'\nimport JBootstrap from \"@components/shared/jbootstrap\"\nimport Img from '../../../images/site-logo.png'\n\nconst Pages = () => (\n  <div className=\"collapse navbar-collapse justify-content-end\" id='collapse-content'>\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/blog\">Blog</Link></li>\n      <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/projects\">Projects</Link></li>\n    </ul>\n  </div>\n);\n\n\nconst Header = () => (\n  <>\n    <JBootstrap/>\n    <nav className=\"navbar navbar-expand-lg navbar-expand-md navbar-container fixed-top navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/\"> <img src={Img} alt=\"\"/> CODE <span>|</span> FROM <span> |</span> DUDE</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-content\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <Pages />\n    </nav>\n  </>\n)\n\nexport default Header"],"sourceRoot":""}